// <auto-generated />
using System;
using FamilyDinnerVotingAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FamilyDinnerVotingAPI.App.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FamilyDinnerVotingAPI.Models.Entities.Meal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Meals");
                });

            modelBuilder.Entity("FamilyDinnerVotingAPI.Models.Entities.MealVoteSession", b =>
                {
                    b.Property<Guid>("MealId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("VoteSessionId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("MealVoteSessionId")
                        .HasColumnType("uuid");

                    b.HasKey("MealId", "VoteSessionId");

                    b.HasIndex("VoteSessionId");

                    b.ToTable("MealVoteSessions");
                });

            modelBuilder.Entity("FamilyDinnerVotingAPI.Models.Entities.Vote", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("MealId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("VoteSessionId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("MealId");

                    b.HasIndex("VoteSessionId");

                    b.HasIndex("UserId", "VoteSessionId")
                        .IsUnique();

                    b.ToTable("Votes");
                });

            modelBuilder.Entity("FamilyDinnerVotingAPI.Models.Entities.VoteSession", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("VoteSessions");
                });

            modelBuilder.Entity("MealVoteSession", b =>
                {
                    b.Property<Guid>("MealsId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("VoteSessionsId")
                        .HasColumnType("uuid");

                    b.HasKey("MealsId", "VoteSessionsId");

                    b.HasIndex("VoteSessionsId");

                    b.ToTable("MealVoteSession");
                });

            modelBuilder.Entity("FamilyDinnerVotingAPI.Models.Entities.MealVoteSession", b =>
                {
                    b.HasOne("FamilyDinnerVotingAPI.Models.Entities.Meal", "Meal")
                        .WithMany("MealVoteSessions")
                        .HasForeignKey("MealId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FamilyDinnerVotingAPI.Models.Entities.VoteSession", "VoteSession")
                        .WithMany("MealVoteSessions")
                        .HasForeignKey("VoteSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Meal");

                    b.Navigation("VoteSession");
                });

            modelBuilder.Entity("FamilyDinnerVotingAPI.Models.Entities.Vote", b =>
                {
                    b.HasOne("FamilyDinnerVotingAPI.Models.Entities.Meal", "Meal")
                        .WithMany("Votes")
                        .HasForeignKey("MealId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FamilyDinnerVotingAPI.Models.Entities.VoteSession", "VoteSession")
                        .WithMany("Votes")
                        .HasForeignKey("VoteSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Meal");

                    b.Navigation("VoteSession");
                });

            modelBuilder.Entity("MealVoteSession", b =>
                {
                    b.HasOne("FamilyDinnerVotingAPI.Models.Entities.Meal", null)
                        .WithMany()
                        .HasForeignKey("MealsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FamilyDinnerVotingAPI.Models.Entities.VoteSession", null)
                        .WithMany()
                        .HasForeignKey("VoteSessionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FamilyDinnerVotingAPI.Models.Entities.Meal", b =>
                {
                    b.Navigation("MealVoteSessions");

                    b.Navigation("Votes");
                });

            modelBuilder.Entity("FamilyDinnerVotingAPI.Models.Entities.VoteSession", b =>
                {
                    b.Navigation("MealVoteSessions");

                    b.Navigation("Votes");
                });
#pragma warning restore 612, 618
        }
    }
}
